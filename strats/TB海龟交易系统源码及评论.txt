开拓者 TB海龟交易系统源码及评论[开拓者公式]

    Question1:

    我用的是交易开拓者旗舰版V4，最近几天在研究上面的海龟交易系统源码，请问上面自带的海龟源码是不是最新的？有没有经过测试啊？我看论坛置顶区里面那里写的最新源码和我的不一样，去网上搜索也不知道哪个是最新、而且没有问题能运行的....
    求解!
    多谢!

    附上软件上的源码


    //------------------------------------------------------------------------
    // 简称: TurtleTrader
    // 名称: 海龟交易系统
    // 类别: 公式应用
    // 类型: 内建应用
    //------------------------------------------------------------------------

    Params
       Numeric RiskRatio(1);                   // % Risk Per N ( 0 - 100)
       Numeric ATRLength(20);                  // 平均波动周期 ATR Length
       Numeric boLength(20);                   // 短周期 BreakOut Length
       Numeric fsLength(55);                   // 长周期 FailSafe Length
       Numeric teLength(10);                   // 离市周期 Trailing Exit Length
       Bool LastProfitableTradeFilter(True);   // 使用入市过滤条件
    Vars
           Numeric MinPoint;                       // 最小变动单位
           NumericSeries AvgTR;                                        // ATR
       Numeric N;                              // N 值
       Numeric TotalEquity;                    // 按最新收盘价计算出的总资产
       Numeric TurtleUnits;                    // 交易单位
       NumericSeries DonchianHi;                      // 唐奇安通道上轨，延后1个Bar
       NumericSeries DonchianLo;                      // 唐奇安通道下轨，延后1个Bar
       NumericSeries fsDonchianHi;                    // 唐奇安通道上轨，延后1个Bar，长周期
       NumericSeries fsDonchianLo;                    // 唐奇安通道下轨，延后1个Bar，长周期
       Numeric ExitHighestPrice;               // 离市时判断需要的N周期最高价
       Numeric ExitLowestPrice;                // 离市时判断需要的N周期最低价
       Numeric myEntryPrice;                   // 开仓价格
       Numeric myExitPrice;                    // 平仓价格
       Bool SendOrderThisBar(False);                  // 当前Bar有过交易
           NumericSeries preEntryPrice(0);               // 前一次开仓的价格
           BoolSeries PreBreakoutFailure(false);        // 前一次突破是否失败
    Begin
       If(BarStatus == 0)
       {
                   preEntryPrice = InvalidNumeric;
                   PreBreakoutFailure = false;
           }      
         
           MinPoint = MinMove*PriceScale;
       AvgTR = XAverage(TrueRange,ATRLength);
           N = AvgTR[1];      
       TotalEquity = Portfolio_CurrentCapital() + Portfolio_UsedMargin();
       TurtleUnits = (TotalEquity*RiskRatio/100) /(N * ContractUnit()*BigPointValue());
       TurtleUnits = IntPart(TurtleUnits); // 对小数取整

       DonchianHi = HighestFC(High[1],boLength);
       DonchianLo = LowestFC(Low[1],boLength);

           fsDonchianHi = HighestFC(High[1],fsLength);
       fsDonchianLo = LowestFC(Low[1],fsLength);
         
           ExitLowestPrice = LowestFC(Low[1],teLength);
           ExitHighestPrice = HighestFC(High[1],teLength);

           Commentary("N="+Text(N));
           Commentary("preEntryPrice="+Text(preEntryPrice));
           Commentary("PreBreakoutFailure="+IIFString(PreBreakoutFailure,"True","False"));
         
       // 当不使用过滤条件，或者使用过滤条件并且条件为PreBreakoutFailure为True进行后续操作
       If(MarketPosition == 0 && ((!LastProfitableTradeFilter) Or (PreBreakoutFailure)))
       {
           // 突破开仓
           If(High > DonchianHi && TurtleUnits >= 1)
           {
               // 开仓价格取突破上轨+一个价位和最高价之间的较小值，这样能更接近真实情况，并能尽量保证成交
               myEntryPrice = min(high,DonchianHi + MinPoint);
               myEntryPrice = IIF(myEntryPrice < Open, Open,myEntryPrice); // 大跳空的时候用开盘价代替
                           preEntryPrice = myEntryPrice;
               Buy(TurtleUnits,myEntryPrice);
                           SendOrderThisBar = True;
                           PreBreakoutFailure = False;
           }

           If(Low < DonchianLo && TurtleUnits >= 1)
           {
               // 开仓价格取突破下轨-一个价位和最低价之间的较大值，这样能更接近真实情况，并能尽量保证成交
               myEntryPrice = max(low,DonchianLo - MinPoint);
               myEntryPrice = IIF(myEntryPrice > Open, Open,myEntryPrice); // 大跳空的时候用开盘价代替
               preEntryPrice = myEntryPrice;
               SendOrderThisBar = True;
               SellShort(TurtleUnits,myEntryPrice);
                           SendOrderThisBar = True;
                           PreBreakoutFailure = False;
           }
       }

       // 长周期突破开仓 Failsafe Breakout point
       If(MarketPosition == 0)
       {
                   Commentary("fsDonchianHi="+Text(fsDonchianHi));
           If(High > fsDonchianHi && TurtleUnits >= 1)
           {
               // 开仓价格取突破上轨+一个价位和最高价之间的较小值，这样能更接近真实情况，并能尽量保证成交
               myEntryPrice = min(high,fsDonchianHi + MinPoint);
               myEntryPrice = IIF(myEntryPrice < Open, Open,myEntryPrice); // 大跳空的时候用开盘价代替
                           preEntryPrice = myEntryPrice;
               Buy(TurtleUnits,myEntryPrice);
                           SendOrderThisBar = True;
                           PreBreakoutFailure = False;
           }

                   Commentary("fsDonchianLo="+Text(fsDonchianLo));
           If(Low < fsDonchianLo && TurtleUnits >= 1)
           {
               // 开仓价格取突破下轨-一个价位和最低价之间的较大值，这样能更接近真实情况，并能尽量保证成交
               myEntryPrice = max(low,fsDonchianLo - MinPoint);
               myEntryPrice = IIF(myEntryPrice > Open, Open,myEntryPrice); // 大跳空的时候用开盘价代替
               preEntryPrice = myEntryPrice;
               SellShort(TurtleUnits,myEntryPrice);
                           SendOrderThisBar = True;
                           PreBreakoutFailure = False;
           }
       }

       If(MarketPosition == 1) // 有多仓的情况
       {      
                   Commentary("ExitLowestPrice="+Text(ExitLowestPrice));
           If(Low < ExitLowestPrice)
           {
               myExitPrice = max(Low,ExitLowestPrice - MinPoint);
                           myExitPrice = IIF(myExitPrice > Open, Open,myExitPrice); // 大跳空的时候用开盘价代替
               Sell(0,myExitPrice);    // 数量用0的情况下将全部平仓
           }Else
           {
               If(preEntryPrice!=InvalidNumeric && TurtleUnits >= 1)
               {
                   If(Open >= preEntryPrice + 0.5*N) // 如果开盘就超过设定的1/2N,则直接用开盘价增仓。
                   {
                       myEntryPrice = Open;
                                           preEntryPrice = myEntryPrice;
                       Buy(TurtleUnits,myEntryPrice);
                                           SendOrderThisBar = True;
                   }

                   while(High >= preEntryPrice + 0.5*N) // 以最高价为标准，判断能进行几次增仓
                   {
                       myEntryPrice = preEntryPrice + 0.5 * N;
                       preEntryPrice = myEntryPrice;
                       Buy(TurtleUnits,myEntryPrice);
                                           SendOrderThisBar = True;                                      
                   }
               }
                         
               // 止损指令
                           If(Low <= preEntryPrice - 2 * N && SendOrderThisBar == false) // 加仓Bar不止损
                           {
                                   myExitPrice = preEntryPrice - 2 * N;
                                   Sell(0,myExitPrice); // 数量用0的情况下将全部平仓
                                   PreBreakoutFailure = True;
                           }
           }
       }Else If(MarketPosition ==-1) // 有空仓的情况
       {
           // 求出持空仓时离市的条件比较值        
                   Commentary("ExitHighestPrice="+Text(ExitHighestPrice));
           If(High > ExitHighestPrice)
           {
               myExitPrice = Min(High,ExitHighestPrice + MinPoint);
                           myExitPrice = IIF(myExitPrice < Open, Open,myExitPrice); // 大跳空的时候用开盘价代替
               BuyToCover(0,myExitPrice);    // 数量用0的情况下将全部平仓
           }Else
           {
               If(preEntryPrice!=InvalidNumeric && TurtleUnits >= 1)
               {
                   If(Open <= preEntryPrice - 0.5*N) // 如果开盘就超过设定的1/2N,则直接用开盘价增仓。
                   {
                       myEntryPrice = Open;
                                           preEntryPrice = myEntryPrice;
                       SellShort(TurtleUnits,myEntryPrice);
                                           SendOrderThisBar = True;
                   }

                   while(Low <= preEntryPrice - 0.5*N) // 以最低价为标准，判断能进行几次增仓
                   {
                       myEntryPrice = preEntryPrice - 0.5 * N;
                       preEntryPrice = myEntryPrice;
                       SellShort(TurtleUnits,myEntryPrice);
                                           SendOrderThisBar = True;
                   }
               }

               // 止损指令
                           If(High >= preEntryPrice + 2 * N &&SendOrderThisBar==false) // 加仓Bar不止损
                           {
                                   myExitPrice = preEntryPrice + 2 * N;
                                   BuyToCover(0,myExitPrice); // 数量用0的情况下将全部平仓
                                   PreBreakoutFailure = True;
                           }
           }
       }
    End

    //------------------------------------------------------------------------
    // 编译版本        GS2010.12.08
    // 版权所有        TradeBlazer Software 2003－2010
    // 更改声明        TradeBlazer Software保留对TradeBlazer平
    //                        台每一版本的TradeBlazer公式修改和重写的权利
    //------------------------------------------------------------------------

     


    TB技术人员： 回复 1# slarkmonk


    V4上的是最新的，海龟交易主要是提供给客户进行学习的一个示例。

     


    TB客服： 回复 2# lh948


     
    谢谢
    Quetion2：
    那那个程序有没有测试过？有没有可能出问题？因为我仔细看了有很多地方有点迷糊（当然更可能自身水平不够，(*^__^*) 嘻嘻……），然后网上很多版本貌似也比这个版本明晰。

    Question3：
    您看看程序的第59和60行

    // 当不使用过滤条件，或者使用过滤条件并且条件为PreBreakoutFailure为True进行后续操作
       If(MarketPosition == 0 && ((!LastProfitableTradeFilter) Or (PreBreakoutFailure)))
    可是prebreakoutfailure必需要在止损之后才是ture，那么这个条件的满足（也就是说短周期的突破）必需经历一次止损才能发生？

     


    网友回复： 本帖最后由 slarkmonk 于 2011-8-16 16:28 编辑

    Question4:
    海龟交易系统有最大头寸的限制
    如下：


    级别 类型 最大单位
    1 单一市场 4个单位
    2 高度相关市场 6个单位
    3 低度相关市场 10个单位
    4 单向交易—多头或空头 12个单位

    程序中貌似没有这个限制？若有，在哪儿体现？？谢谢！
    程序中的135行和173行倒是判断了能进行几次增仓，当时不知道会不会与最大头寸限制冲突。
    135行代码   while(High >= preEntryPrice + 0.5*N) // 以最高价为标准，判断能进行几次增仓
    173行代码  while(Low <= preEntryPrice - 0.5*N) // 以最低价为标准，判断能进行几次增仓

     


    网友回复： Quetion2：
    这不是用A函数做的交易系统，LZ要测试，肯定一堆问题，我已经试过了，N值会在一根BAR上变化，导致图表上的开仓手数和实际不符等等问题
    Question3：
    不止损，那肯定就是成功的价格突破了吧，机器代码是死的思路是活的。。。
    Question4:
    这个，不需要这么纠结，自带海龟确实没有限制，LZ可以自己根据需要来做啊。
    按照2个while，只要一直阳线，就会一直加仓的，又不是必须要用一成不变的海龟来做